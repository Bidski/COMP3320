{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"add",
				"add_executable"
			],
			[
				"N",
				"NUClear"
			],
			[
				"ini",
				"initiateSpinnakerSystem"
			],
			[
				"Sp",
				"SpinnakerCameras"
			],
			[
				"Get",
				"GetHeight"
			],
			[
				"de",
				"deviceID"
			],
			[
				"Spi",
				"SpinnakerCameras"
			],
			[
				"Ca",
				"CameraPtr"
			],
			[
				"c",
				"camera"
			],
			[
				"ima",
				"imageDimensions"
			],
			[
				"conf",
				"configFile"
			],
			[
				"uRi",
				"uRightFoot"
			],
			[
				"H",
				"HIP_OFFSET_Y"
			],
			[
				"exe",
				"executeBulk"
			],
			[
				"const",
				"constexpr"
			],
			[
				"Ser",
				"ServoID"
			],
			[
				"for",
				"forwardKinematics"
			],
			[
				"ri",
				"rightFootTorso"
			],
			[
				"lef",
				"leftFootTorso"
			],
			[
				"uT",
				"uTorsoActual"
			],
			[
				"an",
				"angle"
			],
			[
				"file",
				"fileName"
			],
			[
				"rel",
				"relativePath"
			],
			[
				"robo",
				"robotScript"
			],
			[
				"fil",
				"fileName"
			],
			[
				"host",
				"hostname"
			],
			[
				"set",
				"setPlatform"
			],
			[
				"Pi",
				"PixelType"
			],
			[
				"get",
				"getBayerPixel"
			],
			[
				"def",
				"default"
			],
			[
				"RO",
				"RowMajor"
			],
			[
				"ui",
				"uint8_t"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"G",
				"GetWidth"
			],
			[
				"utilit",
				"utility"
			],
			[
				"cou",
				"counter"
			],
			[
				"m",
				"min_val"
			],
			[
				"runn",
				"running_stat_counter"
			],
			[
				"value",
				"value_type"
			],
			[
				"max",
				"max_val"
			],
			[
				"min",
				"min_val"
			],
			[
				"Vec",
				"Vector2d"
			],
			[
				"oc",
				"oculus_z_axis"
			],
			[
				"cam",
				"camera_to_robot_rot"
			],
			[
				"ox",
				"oculus_z_axis"
			],
			[
				"Ve",
				"Vector3d"
			],
			[
				"velo",
				"velocityLimits"
			],
			[
				"V",
				"Vector3d"
			],
			[
				"row",
				"rowwise"
			],
			[
				"nor",
				"normalized"
			],
			[
				"matr",
				"Matrix"
			],
			[
				"out",
				"outOfBounds"
			],
			[
				"cwise",
				"cwiseEqual"
			],
			[
				"Matrix",
				"MatrixXd"
			],
			[
				"ou",
				"outOfBounds"
			],
			[
				"et",
				"estimate"
			],
			[
				"mot",
				"motionFilter"
			],
			[
				"middle",
				"middleRows"
			],
			[
				"as",
				"asDiagonal"
			],
			[
				"middl",
				"middleRows"
			],
			[
				"Motion",
				"MotionModel"
			],
			[
				"goa",
				"goalLocation"
			],
			[
				"la",
				"lastGoalLocation"
			],
			[
				"Sig",
				"SigmaRowVec"
			],
			[
				"Si",
				"SigmaVec"
			],
			[
				"State",
				"StateVec"
			],
			[
				"Ma",
				"MatrixXd"
			],
			[
				"mean",
				"meanCentered"
			],
			[
				"cov",
				"covarianceWeights"
			],
			[
				"NU",
				"NUM_SIGMA_POINTS"
			],
			[
				"si",
				"sigmaPoints"
			],
			[
				"mea",
				"meanCentered"
			],
			[
				"hidd",
				"hiddenBias"
			],
			[
				"Co",
				"ColsAtCompileTime"
			],
			[
				"Ro",
				"RowsAtCompileTime"
			],
			[
				"tran",
				"translation"
			],
			[
				"tra",
				"translation"
			],
			[
				"im",
				"imaginaryPart"
			],
			[
				"real",
				"realPart"
			],
			[
				"Rot",
				"Rotation"
			],
			[
				"line",
				"linearEq2"
			],
			[
				"li",
				"linearEq1"
			],
			[
				"Tran",
				"Transform3D"
			],
			[
				"Tr",
				"Transform2D"
			],
			[
				"Flas",
				"FlashComplete"
			],
			[
				"input_file",
				"input_file_name"
			],
			[
				"NO",
				"NO_BATTERY"
			],
			[
				"sele",
				"selected_battery"
			],
			[
				"select",
				"selected_device"
			],
			[
				"BA",
				"BATTERY3"
			],
			[
				"NO_",
				"NO_MENU"
			],
			[
				"show",
				"showBatteryMenu"
			],
			[
				"PROJECT",
				"PROJECT_NAME"
			],
			[
				"na",
				"native_handle"
			],
			[
				"wri",
				"writeSize"
			],
			[
				"wr",
				"writeSize"
			],
			[
				"size",
				"size_t"
			],
			[
				"firm",
				"firmware"
			],
			[
				"CM",
				"CM730Version"
			],
			[
				"s",
				"shutdown"
			],
			[
				"header",
				"headerBytes"
			],
			[
				"Dar",
				"DarwinDevice"
			],
			[
				"Da",
				"DarwinDevice"
			],
			[
				"bin",
				"binSize"
			],
			[
				"MAX",
				"MAX_LINE_SIZE"
			],
			[
				"MA",
				"MAX_LINE_SIZE"
			],
			[
				"sec",
				"secondaryStateInfo"
			],
			[
				"coa",
				"coachSequence"
			],
			[
				"red",
				"redCardCount"
			],
			[
				"ye",
				"yellowCardCount"
			],
			[
				"In",
				"IndsType"
			],
			[
				"best",
				"bestEstimate"
			],
			[
				"Fl",
				"FlashCM730Firmware"
			],
			[
				"start",
				"startAddr"
			],
			[
				"sta",
				"startAddress"
			],
			[
				"cm",
				"cm730Firmware"
			],
			[
				"he",
				"hex2bin"
			],
			[
				"fl",
				"flashDynamixel"
			],
			[
				"byte",
				"bytesum"
			],
			[
				"uint",
				"uint8_t"
			],
			[
				"read",
				"readBytes"
			],
			[
				"hard",
				"hardwareLoop"
			],
			[
				"har",
				"hardwareLoop"
			],
			[
				"flash",
				"flashCM730"
			],
			[
				"dy",
				"dynamixelFirmware"
			],
			[
				"Data",
				"Data_Str"
			],
			[
				"rad",
				"radiusSq"
			],
			[
				"squ",
				"squaredNorm"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Traditional"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - PdfLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - XeLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Basic Builder - LuaLaTeX"
				],
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					"Script Builder"
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"hex",
				"HexViewer: Toggle Hex View"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"Ins",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Local Dependency"
			],
			[
				"markdown",
				"GitHub Flavored Markdown: Preview"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/bidski/Projects/graphics"
	],
	"file_history":
	[
		"/home/bidski/Projects/NeuroEvolution/exact/strategy/cnn_edge.cxx",
		"/home/bidski/Projects/NeuroEvolution/exact/strategy/exact.cxx",
		"/home/bidski/Projects/NeuroEvolution/exact/strategy/exact.hxx",
		"/home/bidski/Projects/NeuroEvolution/exact/opencl/CMakeLists.txt",
		"/home/bidski/Projects/NeuroEvolution/exact/datasets/train-images-idx3-ubyte/data",
		"/home/bidski/Projects/NeuroEvolution/exact/datasets/train-images-idx3-ubyte.gz",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/WalkConfig.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/GaitEngine.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/GaitEngine.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/comparison.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/pose/AbstractPose.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/contrib/LimpModel.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/contrib/LimpModel.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/contrib/RobotModel.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/BonnWalk/src/gait/contrib/RobotModel.h",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/src/Camera.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/src/SpinnakerCamera.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/src/Camera.h",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/src/SpinnakerCamera.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/nubugger/NUhelpers.h",
		"/home/bidski/Projects/nubots/NUbots/shared/message/vision/VisionObjects.proto",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/file/fileutil.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/file/fileutil.h",
		"/home/bidski/Projects/nubots/NUbots/build_nuc7i7bnh/shared/message/vision/VisionObjects.h",
		"/home/bidski/Projects/nubots/post_install.sh",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/SensorFilter/src/SensorFilter.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/message/platform/darwin/DarwinSensors.proto",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/darwin/DarwinRawSensors.h",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/HardwareIO.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/darwin/UART.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/KinematicsConfiguration/src/KinematicsConfiguration.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/darwin/Darwin.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/darwin/CM730.h",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/darwin/Darwin.h",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/darwin/UART.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/OldWalkEngine/src/FootFallPlanner.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/strategy/KeyboardWalk/src/KeyboardWalk.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/OldWalkEngine/src/OldWalkEngine.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/skills/DirectWalkController/src/DirectWalkController.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/FootMotionPlanner/src/FootMotionPlanner.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/Convert.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/Convert.h",
		"/home/bidski/Downloads/DARwIn-OP_ROBOTIS_v1.6.0/Linux/project/firmware_installer/main.cpp",
		"/home/bidski/Projects/nubots/NUbots/roles/scripttunerfake.role",
		"/home/bidski/Projects/nubots/NUbots/roles/scriptrunnerfake.role",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/skills/Stand/src/Stand.cpp",
		"/home/bidski/Projects/nubots/NUbots/roles/keyboardwalk.role",
		"/home/bidski/Projects/nubots/NUbots/roles/keyboardwalkfake.role",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/motion/InverseKinematics.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/skills/Getup/src/Getup.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/Controller/src/Controller.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/support/logging/ConsoleLogHandler/src/ConsoleLogHandler.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/vision/LUTClassifier/src/LUTClassifier.cpp",
		"/home/bidski/Projects/nubots/NUbots/roles/robocup.role",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/vision/fourcc.h",
		"/home/bidski/Projects/nubots/NUbots/nuclear/message/generator/Enum.py",
		"/home/bidski/Projects/nubots/NUbots/nuclear/message/generator/Message.py",
		"/home/bidski/Projects/nubots/NUbots/shared/extension/FileWatch.h",
		"/home/bidski/Projects/nubots/NUbots/module/vision/LUTClassifier/data/config/LUTClassifier.yaml",
		"/home/bidski/Projects/nubots/NUbots/module/vision/LUTClassifier/src/LUTClassifier.h",
		"/home/bidski/Projects/nubots/NUbots/roles/featuredetectortester.role",
		"/home/bidski/Projects/nubots/NUbots/roles/bodylessvision.role",
		"/home/bidski/Projects/nubots/NUbots/roles/keyboardclassifier.role",
		"/home/bidski/Projects/nubots/NUbots/shared/extension/Configuration.h",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/strategy/KeyboardWalk/src/KeyboardWalk.h",
		"/home/bidski/Projects/nubots/NUbots/module/vision/LUTClassifier/src/QuexClassifier.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/src/V4L2Camera.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/ScriptEngine/src/ScriptEngine.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/tools/ScriptRunner/src/ScriptRunner.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/extension/Script.h",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareIO/src/darwin/DarwinDevice.h",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/tools/ScriptTuner/src/ScriptTuner.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/ScriptEngine/data/scripts/darwin/NodYes.yaml",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/data/config/Cameras/Camera.yaml",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/src/V4L2Camera.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/vision/Vision.h",
		"/home/bidski/Projects/nubots/NUbots/nuclear/message/include/message/conversion/math_types.h",
		"/home/bidski/Projects/nubots/NUbots/shared/message/input/Image.proto",
		"/home/bidski/image0.ppm",
		"/home/bidski/Projects/nubots/NUbots/shared/message/support/nubugger/DataPoint.proto",
		"/home/bidski/Projects/nubots/NUbots/module/input/PostureRecogniser/src/PostureRecogniser.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/IKKick/data/config/IKKick.yaml",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/vision/Spinnaker.h",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/planning/SimpleWalkPathPlanner/src/SimpleWalkPathPlanner.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/IKKick/src/IKKickControllers.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/IKKick/src/IKKickControllers.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/planning/SimpleWalkPathPlanner/src/SimpleWalkPathPlanner.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/KinematicsConfiguration/data/config/KinematicsConfiguration.yaml",
		"/home/bidski/Projects/nubots/NUbots/module/motion/KinematicsConfiguration/data/config/igus1/KinematicsConfiguration.yaml",
		"/home/bidski/Projects/nubots/NUbots/module/localisation/OdometryLocalisation/src/OdometryLocalisation.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/matrix/Transform3D.h",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/skills/HeadBehaviourSoccer/src/HeadBehaviourSoccer.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/support/eigen.h",
		"/home/bidski/Projects/nubots/NUbots/module/input/GameController/src/GameControllerData.h",
		"/home/bidski/Projects/nubots/NUbots/module/input/GameController/src/GameController.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/Controller/src/Controller.h",
		"/home/bidski/Projects/nubots/NUbots/tests/shared/utility/motion/TestKinematics.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/autocal/MocapStream.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/autocal/MocapRecording.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/statistics/running_stats.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/statistics/running_stat_vec_bones.hpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/statistics/running_stat_vec_meat.hpp",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/data/config/darwin1/Cameras/Camera.yaml",
		"/home/bidski/Projects/nubots/NUbots/module/input/Camera/data/config/Camera.yaml",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/autocal/LinearFitter.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/autocal/Correlator.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/autocal/CalibrationTools.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/autocal/CalibrationTools.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/platform/darwin/HardwareSimulator/src/HardwareSimulator.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/localisation/OdometryLocalisation/src/OdometryLocalisation.h",
		"/home/bidski/Projects/nubots/NUbots/module/support/configuration/NetworkConfiguration/src/NetworkConfiguration.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/support/configuration/NetworkConfiguration/src/NetworkConfiguration.h",
		"/home/bidski/Projects/nubots/NUbots/module/motion/HeadController/src/HeadController.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/HeadController/src/HeadController.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/motion/Balance.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/geometry/UnitQuaternion.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/geometry/UnitQuaternion.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/behaviour/tools/NUPresenceServer/src/NUPresenceServer.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/localisation/RobotFieldLocalisation/src/RobotFieldLocalisation.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/motion/NUPresenceInput/src/NUPresenceInput.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/support/SoccerSimulator/src/VirtualBall.cpp",
		"/home/bidski/Projects/nubots/NUbots/module/support/logging/LegLoadsLogger/src/LegLoadsLogger.cpp",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/localisation/transform.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/vision.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/motion/ForwardKinematics.h",
		"/home/bidski/Projects/nubots/NUbots/shared/utility/math/matrix/Rotation3D.cpp",
		"/home/bidski/Projects/nubots/NUbots/nuclear/message/include/message/conversion/proto_matrix.h",
		"/home/bidski/Projects/nubots/NUbots/module/vision/GoalDetector/src/GoalDetector.cpp"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-build*/*,-doc/*,-*.md",
			"-build*/*,-doc/*",
			"-build*/*,-doc/*,shared/message",
			"-build*/*,-doc/*,module/support",
			"-build*/*,-doc/*,shared/message",
			"-build*/*,-doc/*,",
			"-build*/*,-doc/*,roles/*",
			"-build*/*,-doc/*",
			"-build*/*,-doc/*,module/*,shared/*",
			"-build*/*,-doc/*,*.proto",
			"-build*/*,-doc/*",
			"-build*/*,-doc/*,*.proto",
			"-build*/*,-doc/*",
			"-build*/*,-doc/*,*.proto",
			"-build*/*,-doc/*",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"exact_opencl",
			"opencl_example",
			"exposureTimeToSet",
			"gain",
			"(config\\.)([a-zA-Z]+)\\(\\)",
			"config_server::Parameter<([a-z]+)>\\s+([a-zA-Z]+);",
			"mgFused",
			"mgFusedOffsetZ",
			"cosnt",
			"Foot",
			"Leg",
			"h",
			"capConfig",
			"cap_gait",
			"cmdUseRXFeedback",
			"Y",
			"and",
			"or",
			"and",
			"config->",
			"config",
			"\n                     ",
			"ptr",
			"path",
			"stat",
			"this_thread",
			"pathname",
			"Getup.*yaml",
			"Kick.*yaml",
			"Kick*yaml",
			"yamlKick",
			"uRightFootDestination",
			"uLeftFootDestination",
			"        log(\"uLeftFootDestination\");\n",
			"uRightFootDestination",
			"uLeftFootSource",
			"uLRFootOffset",
			"STOP_REQUEST",
			"StopCommand",
			"stanceReset",
			"// ",
			"uLeftFoot",
			"footOffset",
			"uRightFootDestination",
			"getNewFootTarget",
			"stanceLimitY2",
			"bulkRead",
			"NO_RESPONSE",
			"INPUT_VOLTAGE",
			"NO_RESPONSE",
			"ErrorCode",
			"TIMEOUT_VICTIM",
			"TIMEOUT",
			"TIMEOUT_VICTIM",
			"input voltage",
			"input votlage",
			"case",
			"uint23_t",
			"0",
			"1023",
			"=  ",
			"DarwinSensors",
			"Bad gyroscope value",
			"calculateLegJointsTeamDarwin",
			"generate",
			"StandStill",
			"limit_margin_y",
			"());",
			"\\.emit",
			"There was an exception while generating a reaction Segmentation Fault",
			"LUTClassifier - Classify Image Exception: std::runtime_error Segmentation Fault\\n",
			"LUTClassifier - Classify Image Exception: std::runtime_error Segmentation Fault",
			"BALL_MAXIMUM_VERTICAL_CLUSTER_SPACING",
			"maximum_vertical_cluster_spacing",
			"GoalDetector",
			"key",
			"Stand.yaml",
			"log",
			"There was an error while trying to read from the device",
			"ExecuteScriptByName",
			"Read V4L2Camera",
			"hostname",
			"merge_nodes",
			"YAML",
			"auto",
			"t",
			"n",
			"c",
			"b",
			"a",
			"extension",
			"binary",
			"Script",
			"binary",
			"const",
			"defaultConfig",
			"robotConfig",
			"string",
			"system_error",
			"plaftorm",
			"width",
			"x",
			"PixelType",
			"G2",
			"G1",
			"I",
			"image",
			"width",
			"x",
			"p.",
			"p",
			"I",
			"conv2d(I, IDENTITY)",
			"conv2d",
			"redKernel",
			"width",
			"x",
			"255",
			"static_cast",
			"unsigned",
			"unisgned",
			"&",
			"debayer",
			"debayerR",
			"GetBufferSize",
			"x",
			"T::ColsAtCompileTime",
			"T"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1\\2",
			"\\1\\2;",
			"\\1 \\2;",
			"",
			"\\1.determinant()",
			".inverse()",
			"\\n",
			"std::cout << \\1 << std::endl;",
			"std::cout << \\1 << \\2 << std::endl;",
			"",
			"'\\n'",
			".transpose()",
			".inverse()",
			"Eigen::Matrix\\1d",
			"Eigen::Vector\\1d",
			"\\2",
			"Eigen::Matrix<double, \\1, \\2>",
			"Eigen::VectorXd(\\1)",
			".as<Expression>",
			"\\2.\\1(\\3)",
			"Eigen::\\1(\\2.array()).matrix()",
			"\\2.\\1(\\3)",
			"\\1.normalize()",
			"#include \"utility/support/eigen.h\"",
			"(\\1).norm()",
			"Eigen::Matrix<double, \\1, \\2>",
			"Eigen::Matrix<unsigned int, Eigen::Dynamic, Eigen::Dynamic>",
			"Eigen::Matrix<int, Eigen::Dynamic, Eigen::Dynamic>",
			"Eigen::Matrix<float, Eigen::Dynamic, Eigen::Dynamic>",
			"Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic>",
			"Eigen::Matrix<unsigned int, 4, 4>",
			"Eigen::Matrix<unsigned int, 3, 3>",
			"Eigen::Matrix<unsigned int, 2, 2>",
			"Eigen::Matrix4i",
			"Eigen::Matrix3i",
			"Eigen::Matrix2i",
			"Eigen::Matrix4f",
			"Eigen::Matrix3f",
			"Eigen::Matrix2f",
			"Eigen::Matrix4d",
			"Eigen::Matrix3d",
			"Eigen::Matrix2d",
			"Eigen::Matrix<unsigned int, Eigen::Dynamic, 1>",
			"Eigen::VectorXi",
			"Eigen::VectorXf",
			"Eigen::VectorXd",
			"Eigen::Matrix<double, \\1, 1>",
			"Eigen::Matrix<unsgined int, \\1, 1>",
			"Eigen::Matrix<int, \\1, 1>",
			"Eigen::Matrix<float, \\1, 1>",
			"Eigen::Matrix<double, \\1, 1>",
			"Eigen::Matrix<unsigned int, \\1, 1>",
			"Eigen::Vector\\1i",
			"Eigen::Vector\\1f",
			"Eigen::Vector\\1d",
			"Eigen::Matrix<double, \\1, \\2>",
			"Eigen::Matrix<double, 1, \\1>",
			"Eigen::Matrix<double, \\1, 1>",
			"if (",
			"Eigen::Matrix<double, \\1, \\2>",
			"Eigen::Matrix<double, \\1, 1>",
			"yaml_eigen",
			"Eigen::Matrix<uint, 4, 1>",
			"Eigen::Matrix<uint, 3, 1>",
			"Eigen::Matrix<uint, 2, 1>",
			"Eigen::Vector4i",
			"Eigen::Vector3i",
			"Eigen::Vector2i",
			"Eigen::Vector4f",
			"Eigen::Vector3f",
			"Eigen::Vector2f",
			"Eigen::Vector4d",
			"Eigen::Vector3d",
			"Eigen::Vector2d",
			"#pragma GCC diagnostic ignored \"-Weffc++\"\\n#include <Eigen/Core>\\n#pragma GCC diagnostic pop\n",
			"Camera",
			"uint32",
			";",
			"\\1",
			"\"",
			"],\\n[",
			"'",
			">\\n<",
			"std::isnan"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 155.0
	},
	"output.latextools":
	{
		"height": 112.0
	},
	"pinned_build_system": "Packages/LaTeXTools/LaTeX.sublime-build",
	"project": "graphics.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"comp",
				"shared/utility/math/comparison.h"
			],
			[
				"visionob",
				"shared/message/vision/VisionObjects.proto"
			],
			[
				"nuhe",
				"shared/utility/nubugger/NUhelpers.h"
			],
			[
				"camer",
				"module/input/Camera/src/Camera.cpp"
			],
			[
				"direc",
				"module/behaviour/skills/DirectWalkController/src/DirectWalkController.cpp"
			],
			[
				"key",
				"module/behaviour/strategy/KeyboardWalk/src/KeyboardWalk.cpp"
			],
			[
				"kine",
				"module/motion/KinematicsConfiguration/src/KinematicsConfiguration.cpp"
			],
			[
				"footf",
				"module/motion/OldWalkEngine/src/FootFallPlanner.cpp"
			],
			[
				"foot",
				"module/motion/FootMotionPlanner/src/FootMotionPlanner.cpp"
			],
			[
				"oldwa",
				"module/motion/OldWalkEngine/src/OldWalkEngine.cpp"
			],
			[
				"sen",
				"module/platform/darwin/SensorFilter/src/SensorFilter.cpp"
			],
			[
				"stan",
				"module/behaviour/skills/Stand/src/Stand.cpp"
			],
			[
				"dire",
				"module/behaviour/skills/DirectWalkController/src/DirectWalkController.cpp"
			],
			[
				"oldw",
				"module/motion/OldWalkEngine/src/OldWalkEngine.cpp"
			],
			[
				"get",
				"module/behaviour/skills/Getup/src/Getup.cpp"
			],
			[
				"cons",
				"module/support/logging/ConsoleLogHandler/src/ConsoleLogHandler.cpp"
			],
			[
				"lutcl",
				"module/vision/LUTClassifier/src/LUTClassifier.cpp"
			],
			[
				"contr",
				"module/behaviour/Controller/src/Controller.cpp"
			],
			[
				"hardw",
				"module/platform/darwin/HardwareIO/src/HardwareIO.cpp"
			],
			[
				"ol",
				"module/motion/OldWalkEngine/src/OldWalkEngine.cpp"
			],
			[
				"keywo",
				"module/behaviour/strategy/KeyboardWalk/src/KeyboardWalk.cpp"
			],
			[
				"quex",
				"module/vision/LUTClassifier/src/QuexClassifier.cpp"
			],
			[
				"script",
				"module/behaviour/tools/ScriptTuner/src/ScriptTuner.cpp"
			],
			[
				"scr",
				"module/behaviour/tools/ScriptRunner/src/ScriptRunner.cpp"
			],
			[
				"nod",
				"module/motion/ScriptEngine/data/scripts/darwin/NodYes.yaml"
			],
			[
				"v4",
				"module/input/Camera/src/V4L2Camera.cpp"
			],
			[
				"four",
				"shared/utility/vision/fourcc.h"
			],
			[
				"math",
				"nuclear/message/include/message/conversion/math_types.h"
			],
			[
				"image.",
				"shared/message/input/Image.proto"
			],
			[
				"pos",
				"module/input/PostureRecogniser/src/PostureRecogniser.cpp"
			],
			[
				"spi",
				"shared/utility/vision/Spinnaker.h"
			],
			[
				"spine",
				"shared/utility/vision/Spinnaker.h"
			],
			[
				"sim",
				"module/behaviour/planning/SimpleWalkPathPlanner/src/SimpleWalkPathPlanner.cpp"
			],
			[
				"simpl",
				"module/behaviour/planning/SimpleWalkPathPlanner/src/SimpleWalkPathPlanner.cpp"
			],
			[
				"ikk",
				"module/motion/IKKick/src/IKKickControllers.cpp"
			],
			[
				"simple",
				"module/behaviour/planning/SimpleWalkPathPlanner/src/SimpleWalkPathPlanner.cpp"
			],
			[
				"odom",
				"module/localisation/OdometryLocalisation/src/OdometryLocalisation.cpp"
			],
			[
				"headbe",
				"module/behaviour/skills/HeadBehaviourSoccer/src/HeadBehaviourSoccer.cpp"
			],
			[
				"gam",
				"module/input/GameController/src/GameController.cpp"
			],
			[
				"cont",
				"module/behaviour/Controller/src/Controller.cpp"
			],
			[
				"netwo",
				"module/support/configuration/NetworkConfiguration/src/NetworkConfiguration.cpp"
			],
			[
				"headc",
				"module/motion/HeadController/src/HeadController.cpp"
			],
			[
				"bala",
				"shared/utility/motion/Balance.cpp"
			],
			[
				"inve",
				"shared/utility/motion/InverseKinematics.cpp"
			],
			[
				"pro",
				"nuclear/message/include/message/conversion/proto_matrix.h"
			],
			[
				"proto",
				"nuclear/message/include/message/conversion/proto_matrix.h"
			],
			[
				"goal",
				"module/vision/GoalDetector/src/GoalDetector.h"
			],
			[
				"ps3",
				"module/behaviour/strategy/PS3Walk/src/PS3Walk.cpp"
			],
			[
				"nup",
				"module/behaviour/tools/NUPresenceServer/src/NUPresenceServer.cpp"
			],
			[
				"nupre",
				"module/behaviour/tools/NUPresenceServer/src/NUPresenceServer.h"
			],
			[
				"leg",
				"module/support/logging/LegLoadsLogger/src/LegLoadsLogger.cpp"
			],
			[
				"kickpl",
				"module/behaviour/planning/KickPlanner/src/KickPlanner.cpp"
			],
			[
				"tor",
				"module/motion/TorsoMotionPlanner/src/TorsoMotionPlanner.cpp"
			],
			[
				"to",
				"module/motion/TorsoMotionPlanner/src/TorsoMotionPlanner.cpp"
			],
			[
				"old",
				"module/motion/OldWalkEngine/src/OldWalkEngine.cpp"
			],
			[
				"kickco",
				"module/behaviour/tools/KickCommander/src/KickCommander.h"
			],
			[
				"keybo",
				"module/behaviour/strategy/KeyboardWalk/src/KeyboardWalk.cpp"
			],
			[
				"displ",
				"module/support/DisplayTest/src/DisplayTest.cpp"
			],
			[
				"footpl",
				"module/motion/FootPlacementPlanner/src/FootPlacementPlanner.cpp"
			],
			[
				"t",
				"module/motion/TorsoMotionPlanner/src/TorsoMotionPlanner.cpp"
			],
			[
				"footm",
				"module/motion/FootMotionPlanner/src/FootMotionPlanner.cpp"
			],
			[
				"footfa",
				"module/motion/OldWalkEngine/src/FootFallPlanner.cpp"
			],
			[
				"vis",
				"shared/utility/math/vision.h"
			],
			[
				"virt",
				"module/support/SoccerSimulator/src/VirtualBall.cpp"
			],
			[
				"virtg",
				"module/support/SoccerSimulator/src/VirtualGoalPost.h"
			],
			[
				"soccers",
				"module/support/SoccerSimulator/src/SoccerSimulator.cpp"
			],
			[
				"head",
				"module/behaviour/skills/HeadBehaviourSoccer/src/HeadBehaviourSoccer.cpp"
			],
			[
				"headbes",
				"module/behaviour/skills/HeadBehaviourSoccer/src/HeadBehaviourSoccer.h"
			],
			[
				"sear",
				"module/behaviour/skills/HeadBehaviourSoccer/src/Searcher.h"
			],
			[
				"headco",
				"module/motion/HeadController/src/HeadController.cpp"
			],
			[
				"hards",
				"module/platform/darwin/HardwareSimulator/src/HardwareSimulator.h"
			],
			[
				"fall",
				"module/behaviour/skills/FallingRelax/src/FallingRelax.cpp"
			],
			[
				"socc",
				"module/behaviour/strategy/SoccerStrategy/src/SoccerStrategy.h"
			],
			[
				"do",
				"module/support/optimisation/DOpE/src/DOpE.h"
			],
			[
				"balllo",
				"module/localisation/BallLocalisation/src/BallLocalisation.cpp"
			],
			[
				"spinn",
				"module/input/Camera/src/SpinnakerCamera.cpp"
			],
			[
				"balde",
				"module/vision/BallDetector/src/BallDetector.h"
			],
			[
				"soccer",
				"module/behaviour/strategy/SoccerStrategy/src/SoccerStrategy.h"
			],
			[
				"dis",
				"module/support/DisplayTest/src/DisplayTest.cpp"
			],
			[
				"ballmod",
				"module/localisation/BallLocalisation/src/BallModel.cpp"
			],
			[
				"ballmo",
				"module/localisation/KFBallLocalisation/src/BallModel.cpp"
			],
			[
				"ballmode",
				"module/localisation/BallLocalisation/src/BallModel.h"
			],
			[
				"ballde",
				"module/vision/BallDetector/src/BallDetector.h"
			],
			[
				"fiem",
				"module/localisation/RobotFieldLocalisation/src/FieldModel.cpp"
			],
			[
				"fiedm",
				"module/localisation/RobotFieldLocalisation/src/FieldModel.h"
			],
			[
				"ballf",
				"module/vision/LUTClassifier/src/BallFinder.cpp"
			],
			[
				"ballfind",
				"module/vision/LUTClassifier/src/BallFinder.cpp"
			],
			[
				"sens",
				"module/platform/darwin/SensorFilter/src/SensorFilter.h"
			],
			[
				"motio",
				"module/platform/darwin/SensorFilter/src/MotionModel.h"
			],
			[
				"darwv",
				"module/platform/darwin/SensorFilter/src/DarwinVirtualLoadSensor.cpp"
			],
			[
				"darwincv",
				"module/platform/darwin/SensorFilter/src/DarwinVirtualLoadSensor.cpp"
			],
			[
				"kinem",
				"shared/message/motion/KinematicsModels.proto"
			],
			[
				"goa",
				"module/vision/GoalDetector/src/GoalDetector.cpp"
			],
			[
				"goaldet",
				"module/vision/GoalDetector/src/GoalDetector.cpp"
			],
			[
				"goalde",
				"module/vision/GoalDetector/src/GoalDetector.cpp"
			],
			[
				"kinede",
				"module/debug/KinematicsDebug/src/KinematicsDebug.cpp"
			],
			[
				"auto",
				"module/research/AutoClassifierProvider/src/AutoClassifierProvider.cpp"
			],
			[
				"rot",
				"shared/utility/math/geometry/RotatedRectangle.h"
			],
			[
				"ro",
				"shared/utility/math/matrix/Rotation2D.h"
			],
			[
				"fou",
				"shared/utility/vision/fourcc.h"
			],
			[
				"quexc",
				"module/vision/LUTClassifier/src/QuexClassifier.cpp"
			],
			[
				"line",
				"shared/utility/math/geometry/Line.cpp"
			],
			[
				"unit",
				"shared/utility/math/geometry/UnitQuaternion.h"
			],
			[
				"trans",
				"shared/utility/math/matrix/Transform2D.h"
			],
			[
				"transform",
				"shared/utility/math/matrix/Transform3D.h"
			],
			[
				"angl",
				"shared/utility/math/angle.h"
			],
			[
				"rota",
				"shared/utility/math/matrix/Rotation2D.h"
			],
			[
				"darwinsens",
				"module/platform/darwin/SensorFilter/data/config/DarwinSensorFilter.yaml"
			],
			[
				"darwins",
				"shared/message/platform/darwin/DarwinSensors.proto"
			],
			[
				"se",
				"module/platform/darwin/SensorFilter/src/SensorFilter.cpp"
			],
			[
				"module/input/camera/src/__cxx11syms.cpp",
				"module/input/Camera/src/__cxx11syms.cpp"
			],
			[
				"nucmod",
				"nuclear/module/NUClearModule.cmake"
			],
			[
				"ukf",
				"shared/utility/math/filter/UKF.h"
			],
			[
				"confi",
				"shared/extension/Configuration.h"
			],
			[
				"nub",
				"puppet/manifests/nubots.pp"
			],
			[
				"walke",
				"module/motion/WalkEngine/data/config/WalkEngine.yaml"
			],
			[
				"getup",
				"module/behaviour/skills/Getup/src/Getup.cpp"
			],
			[
				"walk",
				"module/motion/WalkEngine/src/WalkEngine.cpp"
			],
			[
				"game",
				"module/input/GameController/src/GameController.h"
			],
			[
				"inver",
				"shared/utility/motion/InverseKinematics.cpp"
			],
			[
				"forw",
				"shared/utility/motion/ForwardKinematics.h"
			],
			[
				"tran",
				"shared/utility/math/matrix/Transform2D.h"
			],
			[
				"datal",
				"module/support/logging/DataLogging/src/DataLogging.cpp"
			],
			[
				"kmean",
				"shared/utility/learning/KMeans.cpp"
			],
			[
				"darwin",
				"shared/message/platform/darwin/DarwinSensors.proto"
			],
			[
				"harw",
				"module/platform/darwin/HardwareIO/src/HardwareIO.h"
			],
			[
				"scrip",
				"shared/extension/Script.h"
			],
			[
				"headcon",
				"module/motion/HeadController/src/HeadController.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/nubots/CM730/CM730.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"vintage":
		{
		}
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 289.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
